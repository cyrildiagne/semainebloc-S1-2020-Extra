/* cbySlideshow plugin */
(function($){
	/* OO jquery based on http://www.virgentech.com/blog/2009/10/building-object-oriented-jquery-plugin.html */
	$.fn.cbySlideshow = function(options) {
		return this.each(function() {
			var element = $(this);
			if (options && options.removeData==true) element.removeData('cbySlideshow');
			// Return early if this element already has a plugin instance
			if (element.data('cbySlideshow')) return;
			// pass options to plugin constructor
			var cbySlideshow = new cbySlideshowClass(this, options);
			// Store plugin object in this element's data
			element.data('cbySlideshow', cbySlideshow);
		});
	};
	
	var cbySlideshowClass = function(element,options) {
		// Start declaration (don't forget to put 'var' before every variables/functions!)
		// Default settings
		var settings = jQuery.extend({
			interval: 3000,
			speed: 1000,
			height: false,
			autoplay: true,
			selector: false,
			current:0,						// Allow to start from a specific slide
			title: false,					// Show title of img in the bottom part
			counter: "tiles",				// Can be 'tiles' (dots at the bottom-right), 'number' (1/x) or 'no'
			start: 0						// Milliseconds of 'delay' to start slideshow (to delay autoplay when more that one slideshow on the page)
		}, options);
		var container=$(element);			// The object
		$("div.added",container).remove();	// Remove the added div (avoid to have in double when re-init plugin)
		var height=0;						// Slideshow height
		var timeout=false;					// Variable to start/stop the slideshow
		var current=settings.current;		// Variable containing the index of the current slide
		if (settings.selector===false)
			var slides=container.children();	// We take the first level of children as slides (can be img, div, ...)
		else
			var slides=container.children(settings.selector);
		if (slides.length<=1) return false;
		if (slides[0].nodeName.toLowerCase()=="img") {
			slides.eq(0).bind("load",function(){
			//	doResize();
			})
		};
		if (current>=slides.length) current=0;
		if (slides.length>10) settings.counter="number";		// If more than 50 slides, set the counter to number
		if (!(slides.length>1)) settings.counter="no";		// If more only one slide, no 'tiles'
		
		/*if (!settings.height) 			// Default height to the first image
			height=slides.eq(current).height();
		else height=settings.height;*/
		height=container.height();
		var width=container.width();
		
		if (1 || window.parent.document==window.document) {		// we are in a normal page (no contentEditable)
			container.css({position:"relative",width:width+"px",height:height+"px"});	// The container MUST have a fixed height, must be handle if resize() can change it
			slides.each(function(){			// Set the slides position (top-left) and hide them
					$(this).css({position:"absolute",top:0}).css("left",0).hide();
			});
		} else {											// we are in a contentEditable (wysiwyg editor)
			container.addClass("cbyEditorEdition").addClass("cbyEditorNoresize");
			$('head').append('<style type="text/css">.cbyEditorEdition img {width:20%;display:block !important;float:left;padding:0.5em}</style>');	
			//document.execCommand("enableObjectResizing", false, false);
			
			return false;
		}
		
		slides.eq(current).show();
		if (slides.length>1 && settings.autoplay) timeout=setTimeout(function() {next();},settings.interval+settings.start);
		container.addClass("cbySlideshow");
		
		if (settings.title) {				// Set a 'title bar' at the bottom of the container and a serie of 'tiles' to navigate in the slideshow
			var title=$("<div>").css({position:"absolute",bottom:0,left:0,right:0}).addClass("title added").html(slides.eq(0).attr("alt"));		// right AND left are set (to get true 100% no matter of padding)
			container.append(title);
		}
		switch (settings.counter) {
			case "tiles":
			case "number":
				var tiles=$("<div>").css({position:"absolute",bottom:58,width:'auto',left:0}).addClass("added");
				if (settings.counter=="tiles") {
					for (var i=0;i<slides.length;i++) {		// Create the tiles and put class 'selected' on the first one
						var tile=$("<div>").css("cursor","pointer").addClass("tiles").addClass((i==0)?"selected":"");
						tiles.append(tile);
					}
				} else {
					tiles.addClass("number");
					tiles.text((current+1)+"/"+slides.length);
				}
				container.append(tiles);
				if (settings.counter=="tiles") {
					tiles.css({left:width/2-(slides.length)*14})
				}
					
				if (settings.counter=="tiles") {
					container.find("div.tiles").each(	// Bind the onclick event after tiles are appended!
						function(i,obj){
							$(obj).bind("click",{index:i},function(event){jumpto(event.data.index,true)})
						});
				}
				break;
		}
		var next = function() {						// Function to go to the next slide (and continue slideshow)
			var i=current+1;
			if (i==slides.length) i=0;
			jumpto(i,false);
			timeout=setTimeout(function() {next();},settings.interval);
		}
		var jumpto = function(i,stop) {				// Function to jump to a specific slide (and stop the slideshow if needed)
			if ($("body").width()<768) return false;	// If mobile, skip jumpto
			if (!container.is(":visible")) return false;	// No animation if container is not visible!
			if (stop) clearTimeout(timeout);
			slides.eq(current).fadeOut(settings.speed);
			slides.eq(i).fadeIn(settings.speed);
			if (settings.title) {
				title.html(slides.eq(i).attr("alt"));
			}
			if (settings.counter=="tiles") {
				tiles.find("div").eq(current).removeClass("selected");
				tiles.find("div").eq(i).addClass("selected");
			}
			if (settings.counter=="number") {
				tiles.text((i+1)+"/"+slides.length);
			}
			current=i;
		}
		var doResize = function() {
			height=slides.eq(current).height();
			container.css({height:height+"px"});
		}
		this.resize = function() {
			doResize();
		}
		this.getCurrent = function() {
			return current;
		}
	}
})(jQuery);
